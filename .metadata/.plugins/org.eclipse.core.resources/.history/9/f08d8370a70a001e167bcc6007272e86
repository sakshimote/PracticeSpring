package com.demo.DtoMapstructApp.controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.demo.DtoMapstructApp.dto.ProductDto;
import com.demo.DtoMapstructApp.mapper.ProductMapper;
import com.demo.DtoMapstructApp.model.Item;
import com.demo.DtoMapstructApp.model.Product;
import com.demo.DtoMapstructApp.repository.ItemRepository;
import com.demo.DtoMapstructApp.repository.ProductRepository;

@RestController
@RequestMapping("/product")
public class ProductController {
	
	@Autowired
	private ProductMapper productMapper;
	
	@Autowired
	private ProductRepository productRepository;
	
	@Autowired
	private ItemRepository itemRepository;
	
//	@PostMapping("/post/{itemId}")
//	public ResponseEntity<Product> save(@RequestBody Product product,@PathVariable("itemId")Integer itemId){
//		
//		Item item=itemRepository.findById(itemId).get();	
//		List<Item> items=new ArrayList<>();
//		
//		items.add(item);
//		
//		product.setItems(items);
//		
//		
//		return new ResponseEntity<>(productRepository.save(product),HttpStatus.CREATED);
//		
//	}
//	
//	@PostMapping("/post/items/{pid}")
//	public ResponseEntity<Item> save(@RequestBody Item items,@PathVariable("pid")Integer pid){
////		Product product=productRepository.findById(pid).get();
////		
////		items.setProduct(product);
//		return new ResponseEntity<>(itemRepository.save(items),HttpStatus.CREATED);
//		
//	}
//	
	
	@GetMapping("/products")
	public ResponseEntity<List<ProductDto>> findAll(){
		return new ResponseEntity<>(productMapper.modelsToDtos(productRepository.findAll()),HttpStatus.OK);
		
	}
	
	@GetMapping("/products/{id}")
	public ResponseEntity<ProductDto> findById(@PathVariable int id){
		return new ResponseEntity<>(productMapper.modelToDto(productRepository.findById(id).get()),HttpStatus.OK);
		
	}
	
	@DeleteMapping("/delete/{id}")
	public ResponseEntity<Void> deleteById(@PathVariable int id){
		ProductDto dto=productMapper.modelToDto(productRepository.findById(id).get()); 
	
	  productRepository.deleteById(dto.getId());
	
		return new ResponseEntity<>(HttpStatus.NO_CONTENT);
		
	}
	
	
	
	
	
	

}
