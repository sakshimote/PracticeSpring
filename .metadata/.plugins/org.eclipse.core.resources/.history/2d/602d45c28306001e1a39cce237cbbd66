package com.demo.DtoMapstructApp.mapper;

import java.util.List;
import java.util.UUID;

import org.mapstruct.InheritInverseConfiguration;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.factory.Mappers;

import com.demo.DtoMapstructApp.dto.ProductDto;
import com.demo.DtoMapstructApp.model.Product;

@Mapper(componentModel = "spring", imports = UUID.class)
public interface ProductMapper {
	
	ProductMapper INSTANCE=Mappers.getMapper(ProductMapper.class);
	
	
	@Mapping(source = "product.desc",target = "description", defaultValue = "description")
	@Mapping(target = "itemId",expression = "java(UUID.randomUUID().toString())")
	@Mapping(source = "product.items",target = "itemsList")
	ProductDto modelToDto(Product product);

//	@Mapping(source = "dto.description",target = "desc",defaultValue = "description")
	@InheritInverseConfiguration
	@Mapping(target = "itemId",expression = "java(UUID.randomUUID().toString())")
	Product dtoTomodel(ProductDto dto);
	
	List<ProductDto> modelsToDtos(List<Product> products);
	
		
	


}
