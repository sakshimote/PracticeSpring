package com.demo.DtoMapstructApp.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.demo.DtoMapstructApp.dto.ProductDto;
import com.demo.DtoMapstructApp.mapper.ProductMapper;
import com.demo.DtoMapstructApp.model.Product;
import com.demo.DtoMapstructApp.repository.ProductRepository;

@RestController
public class ProductController {
	
	@Autowired
	private ProductMapper productMapper;
	
	@Autowired
	private ProductRepository productRepository;
	
	@PostMapping("/post")
	public ResponseEntity<Product> save(@RequestBody ProductDto productDto){
		
		return new ResponseEntity<>(productRepository.save(
				productMapper.dtoTomodel(productDto)
				),HttpStatus.CREATED);
		
	}
	
	@GetMapping("/products")
	public ResponseEntity<List<ProductDto>> findAll(){
		return new ResponseEntity<>(productMapper.modelsToDtos(productRepository.findAll()),HttpStatus.OK);
		
	}
	
	@GetMapping("/products")
	public ResponseEntity<ProductDto> findById(@PathVariable int id){
		return new ResponseEntity<>(productMapper.modelToDto(productRepository.findById(id).get()),HttpStatus.OK);
		
	}
	
	@DeleteMapping("/delete")
	public ResponseEntity<Void> deleteById(@PathVariable int id){
		ProductDto dto=productMapper.modelToDto(productRepository.findById(id).get()); 
	
	productRepository.delete(productRepository.findById(id).get());
	
		return new ResponseEntity<>(HttpStatus.NO_CONTENT);
		
	}
	
	
	
	

}
