package com.demo.DtoMapstructApp.mapper;

import java.util.List;
import java.util.UUID;

import org.mapstruct.InheritInverseConfiguration;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.factory.Mappers;

import com.demo.DtoMapstructApp.DtoMapstructAppApplication;
import com.demo.DtoMapstructApp.dto.ProductDto;
import com.demo.DtoMapstructApp.model.Product;


@Mapper(componentModel = "spring", imports = UUID.class)
public interface ProductMapper {
	
	ProductMapper INSTANCE=Mappers.getMapper(ProductMapper.class);
	
	
	@Mapping(source = "product.desc",target = "description", defaultValue = "description")
	@Mapping(target = "itemId",expression = "java(UUID.randomUUID().toString())")
	@Mapping(source = "product.items",target = "itemsList")
	default ProductDto modelToDto(Product product) {
		
		
		ProductDto productDto=new ProductDto();
		productDto.setDescription(product.getDescription());
		productDto.setId(product.getId());
		productDto.setName(product.getName());
		productDto.setPrice(product.getPrice());
		productDto.setQuantity(String.valueOf(product.getQuantity()));
		productDto.setItems(product.getItems());
		
		return productDto;
	
	}

//	@Mapping(source = "dto.description",target = "desc",defaultValue = "description")
	@InheritInverseConfiguration
//	@Mapping(target = "itemId",expression = "java(UUID.randomUUID().toString())")
	
	 default Product dtoTomodel(ProductDto dto) {
		
		Product product =new Product();
		product.setDescription(dto.getDescription());
		product.setId(dto.getId());
		product.setName(dto.getName());
		product.setPrice(dto.getPrice());
		product.setQuantity(Integer.parseInt(dto.getQuantity()));
		product.setItems(dto.getItems());
		
		return product;
		
	}
	
	List<ProductDto> modelsToDtos(List<Product> products);



}
